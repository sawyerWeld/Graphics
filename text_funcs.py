# text.py

# text for graphics package
# fonts are 6 wide and 8 tall
def space():
     return ((0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0))

def period():
     return ((0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,0,0,0),
     (0,0,0,1,1,0),
     (0,0,0,1,1,0))

def l_paren():
     return ((0,0,1,1,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,0,1,1,0,0))

def r_paren():
     return ((0,0,1,1,0,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,1,1,0,0))

def slash():
     return ((0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,1,0,0),
     (0,0,0,1,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0))

def a():
     return ((0,0,1,1,0,0),
     (0,0,1,1,0,0),
     (0,1,0,0,1,0),
     (0,1,0,0,1,0),
     (0,1,0,0,1,0),
     (1,1,1,1,1,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1))

def b():
     return ((1,1,1,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,1,1,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,1,1,1,0,0))

def c(): 
     return ((0,0,1,1,1,1),
     (0,1,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (0,1,0,0,0,0),
     (0,0,1,1,1,1))

def d(): 
     return ((1,1,1,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,1,0),
     (1,1,1,1,0,0))

def e(): 
     return ((1,1,1,1,1,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,1,1,1,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,1,1,1,1,0))

def f(): 
     return ((1,1,1,1,1,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,1,1,1,1,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0))

def g(): 
     return ((0,0,1,1,1,1),
     (0,1,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,1,1,1),
     (1,0,0,0,0,1),
     (0,1,0,0,0,1),
     (0,0,1,1,1,1))

def h(): 
     return ((1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,1,1,1,1,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1))

def i(): 
     return ((0,1,1,1,1,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,1,1,1,1,0))

def j(): 
     return ((0,0,1,1,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,1,1,1,0,0))

def k(): 
     return ((1,0,0,0,1,0),
     (1,0,0,1,0,0),
     (1,0,1,0,0,0),
     (1,1,0,0,0,0),
     (1,1,0,0,0,0),
     (1,0,1,0,0,0),
     (1,0,0,1,0,0),
     (1,0,0,0,1,0))

def l(): 
     return ((0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,0,0,0,0),
     (0,1,1,1,1,0))

def m(): 
     return ((1,0,0,0,0,0),
     (1,1,0,0,0,1),
     (1,0,1,0,1,1),
     (1,0,0,1,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1))

def n(): 
     return ((1,0,0,0,0,1),
     (1,1,0,0,0,1),
     (1,0,1,0,0,1),
     (1,0,1,0,0,1),
     (1,0,0,1,0,1),
     (1,0,0,1,0,1),
     (1,0,0,0,1,1),
     (1,0,0,0,0,1))

def o(): 
     return ((0,1,1,1,1,0),
     (0,1,0,0,1,0),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (0,1,0,0,1,0),
     (0,1,1,1,1,0))

def p(): 
     return ((1,1,1,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,1,1,1,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0))

def q(): 
     return ((0,0,1,1,0,0),
     (0,1,0,0,1,0),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,1,0,1),
     (1,0,0,1,0,1),
     (0,1,0,0,1,0),
     (0,0,1,1,0,1))

def r(): 
     return ((1,1,1,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (1,1,1,1,0,0),
     (1,0,0,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0))

def s(): 
     return ((0,1,1,1,1,0),
     (1,0,0,0,0,0),
     (1,0,0,0,0,0),
     (0,1,1,1,0,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (0,0,0,0,1,0),
     (1,1,1,1,0,0))

def t(): 
     return ((1,1,1,1,1,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0))

def u(): 
     return ((1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (0,1,1,1,1,0))

def v(): 
     return ((1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (0,1,0,0,1,0),
     (0,1,0,1,0,0),
     (0,0,1,0,0,0))

def w(): 
     return ((1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (1,0,0,0,0,1),
     (0,1,0,1,0,1),
     (0,1,1,0,1,0),
     (0,1,0,0,1,0))

def x(): 
     return ((1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (0,1,0,1,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,1,0,1,0,0),
     (1,0,0,0,1,0),
     (1,0,0,0,1,0))

def y(): 
     return ((1,0,0,0,1,0),
     (1,0,0,0,1,0),
     (0,1,0,1,0,0),
     (0,1,0,1,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0))

def z(): 
     return ((1,1,1,1,1,0),
     (0,0,0,0,1,0),
     (0,0,0,1,0,0),
     (0,0,1,0,0,0),
     (0,0,1,0,0,0),
     (0,1,0,0,0,0),
     (1,0,0,0,0,0),
     (1,1,1,1,1,0))

# adfa
def text_points(input):
     point_list = []
     txt = input.lower()
     for char_number, char in enumerate(txt):
          func = None
          if char == " ":
               func = space
          elif char == ".":
               func = period
          elif char == "(":
               func = l_paren
          elif char == ")":
               func = r_paren
          elif char == "/":
               func = slash
          else:
               func = globals()[char]
          grid = func()
          char_list = [] # list for just this 1 char
          for i, line in enumerate(grid):
               for j, pixel in enumerate(line):
                    if pixel == 1:
                         char_list.append((j + (7 * char_number),i))
          point_list.extend(char_list)
     return point_list
     